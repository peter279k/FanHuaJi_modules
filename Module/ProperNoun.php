<?php

/**
 * This is a module for FanHuaJi.
 * It's responsible for transforming generic words.
 * @author 小斐 <admin@2d-gate.org>
 */

namespace XiaoFei\Fanhuaji\Module;

use XiaoFei\Fanhuaji\DataType\DataInput;
use XiaoFei\Fanhuaji\DataType\ModuleAnalysis;
use XiaoFei\Fanhuaji\Module\Helper\AbstractModule;

class ProperNoun extends AbstractModule {

    public static $info = [
        'name' => '專有名詞',
        'desc' => '較具有通用性的人名、地名、片名、遊戲名等等…',
    ];

    public function load_or_not (ModuleAnalysis &$info) {
        if (!in_array($info->to, ['tw'])) return false;
        return true;
    }

    public function loop_or_not () {
        return false;
    }

    public function conversion_table (ModuleAnalysis &$info) {
        // if a English word writes in uppercase, we may consider it as a proper noun
        $mapping = [

// 人名
'伯利茲' => '貝里斯',
'傅[里裡]葉' => '傅立葉',
'列奧納多' => '李奧納多',
'卡[里裡]古拉' => '卡利古拉',
'哥特(?![別殊意地喜愛想])' => '哥德',
'喬布斯' => '賈伯斯',
'埃瑞克' => '艾瑞克',
'巴佛滅' => '巴風特',
'巴羅克' => '巴洛克',
'弗蘭克' => '法蘭克',
'德摩根' => '笛摩根',
'斯大林' => '史達林',
'斯科特' => '史考特',
'普利策' => '普利茲',
'漢姆雷特' => '哈姆雷特',
'畢加索' => '畢卡索',
'莫差特' => '莫札特',
'萊昂納多' => '李奧納多',
'蓋茨' => '蓋茲',
'薛定[諤谔鄂]' => '薛丁格',
'迪卡普[里裡]奧' => '狄卡皮歐',
'道([·• 　]*)瓊斯' => '道$1瓊',
'達([·• 　]*)芬奇' => '達$1文西',
'馬([裡里])奧' => '瑪莉歐',
// 機構、組織
'(?<![山空幽稻五])[谷穀][哥歌](?![們唱舞謠])' => 'Google',
// 國家、地名
'九重裡' => '九重里',
'伯克利' => '柏克萊',
'布[裡里列]塔' => '不列顛',
'布須曼' => '布希曼',
'意大利' => '義大利',
'文莱' => '汶萊',
'新西蘭' => '紐西蘭',
'格林尼治' => '格林威治',
'百慕大' => '百慕達',
'老撾' => '寮國',
'蘭裡市(?![場集政])' => '蘭里市',
// 慶典、頒獎
'(戛納|康城)(國際)?(影展|電影節)' => '坎城影展',
// 影視、小說
'[黑駭]客帝國' => '駭客任務',
'加勒比海盗' => '神鬼奇航',
'指環王' => '魔戒',
'星球大戰' => '星際大戰',
'泰坦尼克號?' => '鐵達尼號',
'盜夢空間' => '全面啟動',
// 遊戲
'(?<![上的])求生之路(?![也越愈])' => '惡靈勢力',
'(?<![用靠著的])合金裝備' => '潛龍諜影',
'(?<![的]|[變成]為)生化危機' => '惡靈古堡',
'使命召喚' => '決勝時刻',
'冰封王座' => '寒冰霸權',
'刺客信條' => '刺客教條',
'古墓麗影' => '古墓奇兵',
'命令與征服' => '終極動員令',
'孤島危機' => '末日之戰',
'孤島驚魂' => '極地戰嚎',
'守望先鋒' => '鬥陣特攻',
'寂靜嶺' => '沉默之丘',
'怪物獵人' => '魔物獵人',
'最終幻想|太空戰士' => 'Final Fantasy', // https://zh.wikipedia.org/wiki/%E6%9C%80%E7%B5%82%E5%B9%BB%E6%83%B3%E7%B3%BB%E5%88%97#.E4.B8.AD.E6.96.87.E8.AF.91.E5.90.8D
'極品飛車' => '極速快感',
'泡泡堂' => '爆爆王',
'爐石傳說' => '爐石戰記',
'紅心大戰' => '傷心小棧',
'街頭霸王' => '快打旋風',
'風暴英雄' => '暴雪英霸',
// 物理、化學
'硅' => '矽', '砹' => '砈', '銰' => '砈', '鈪' => '砈', '鈁' => '鍅',
'鈈' => '鈽', '錇' => '鉳', '鍀' => '鎝', '鎄' => '鑀', '鎇' => '鋂',
'鎿' => '錼', '鐦' => '鉲', '鑥' => '鎦',
'甲種射線' => 'α射線', '乙種射線' => 'β射線', '丙種射線' => 'γ射線',
'摩爾(質量|濃度|[^\s　]*常[數量])' => '莫耳$1',
'脫氧核([醣糖])' => '去氧核$1',
// 動漫
'([a-z之的代]|自由|天帝|決鬥|暴風|瘟神|禁斷|神盾|侵略|電擊|攻擊|戰士|正義|雷鳥|陸戰|精靈|實驗|獨角獸?)(型)?[高敢]達' => '$1$2鋼彈',
'[高敢]達([a-z動漫達玩系模公種之娘無玉石版板])' => '鋼彈$1',
'中華小(廚師|當家)' => '中華一番',
'全金屬狂潮' => '驚爆危機',
'千與千尋' => '神隱少女',
'口袋(妖怪|怪[獸物])|寵物小精靈' => '神奇寶貝',
'寵物小精靈' => '神奇寶貝',
'數碼暴龍機' => '神聖計畫',
'數碼暴龍' => '數碼寶貝',
'浪客劍心' => '神劍闖江湖',
'鐵臂阿童木' => '原子小金剛',
// 動漫中的名詞 - 錯字修正
'戴比路剋星' => '戴比路克星',
// 動漫中的名詞 - 譯名更換
'約束勝利之劍' => '誓約勝利之劍',
// 日文
'([來有]|紅莉)棲(?![梧棲息地宿所身流屑止])' => '$1栖',
'棲([麻]|院(?![區長]))' => '栖$1',
'栖([姬鬼艦])' => '棲$1', // 艦隊Collection
'麻枝準(?![備])' => '麻枝准',
// 其他
'(?<=[輛台臺的])[奔朋]馳(?![速而聲])' => '賓士',
'[奔朋]馳(?=[a-z報價汽轎車牌司駕乘]|概念)' => '賓士',
'桑巴' => '森巴',

        ];
        return $this->addSpecialFixes($info, $mapping);
    }

    protected function addSpecialFixes (ModuleAnalysis &$info, array $mapping) {
        $textHas = function ($needle, $locale='tc') use (&$info) {
            $haystack = &$info->texts[$locale];
            return
                $this->isRegex($needle) ?
                    preg_match("/{$needle}/um", $haystack) === 1 :
                    strpos($haystack, $needle) !== false;
        };
        // 空之境界
        if ($textHas('蒼崎|兩儀|黑桐')) {
            $mapping += [ '干也' => '幹也' ];
        } else {
            $mapping += [ '橙子' => '柳丁' ];
        }
        // 難以判斷轉換例外的學程
        if ($textHas('(?<![當起最])初中')) {
            $mapping += [
                '(?<=[當起最年月日天])初' => '_protect_Chu_', // protect "初"
                '初中' => '國中',
                '初([二三四五六]|一(?!十五))(?![吃])' => '國$1',
                '_protect_Chu_' => '初', // restore protections
            ];
        }
        return $mapping;
    }

}
